# -*- coding: utf-8 -*-
"""PC01_Clase.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eMl9i0FMBgZ8bxFiKeLxGgU2D9Fy60xb
"""

import streamlit as st
import pandas as pd

st.set_page_config(page_title="Sistema de Becas - Universidad San Gabriel", layout="wide")
st.title("🎓 Sistema de Evaluación de Becas – Universidad San Gabriel")

# Base de datos en memoria
if 'postulaciones' not in st.session_state:
    st.session_state.postulaciones = []

menu = st.sidebar.radio("Menú", [
    "🏠 Inicio",
    "📝 Postular a Beca",
    "🔍 Evaluación de Postulantes",
    "📋 Listado de Evaluados",
    "📊 Panel de Métricas"
])

if menu == "🏠 Inicio":
    st.subheader("Bienvenido al sistema de becas")
    st.markdown("Este sistema permite simular el proceso de evaluación automática para becas académicas.")
    st.markdown("_Desarrollado por: Dr. Michael Quinteros_")

elif menu == "📝 Postular a Beca":
    st.subheader("Formulario de Postulación")
    with st.form("form_postulacion"):
        nombre = st.text_input("Nombre completo")
        dni = st.text_input("DNI")
        promedio = st.slider("Promedio académico (0-20)", 0.0, 20.0, 14.0)
        economia = st.selectbox("Situación económica", ["Alta", "Media", "Baja"])
        meritos = st.slider("Puntaje por méritos (0-10)", 0, 10, 5)
        extracurricular = st.slider("Participación extracurricular (0-10)", 0, 10, 5)
        enviar = st.form_submit_button("Enviar postulación")
        if enviar:
            st.session_state.postulaciones.append({
                'ID': len(st.session_state.postulaciones) + 1,
                'Nombre': nombre,
                'DNI': dni,
                'Promedio': promedio,
                'Economía': economia,
                'Méritos': meritos,
                'Extracurricular': extracurricular,
                'Puntaje Total': None,
                'Resultado': 'Pendiente'
            })
            st.success("Postulación registrada")

elif menu == "🔍 Evaluación de Postulantes":
    st.subheader("Evaluación automática")
    for p in st.session_state.postulaciones:
        if p['Puntaje Total'] is None:
            economia_score = {'Alta': 0, 'Media': 5, 'Baja': 10}[p['Economía']]
            total = (p['Promedio'] * 2) + economia_score + (p['Méritos'] * 1.5) + (p['Extracurricular'] * 1.2)
            p['Puntaje Total'] = round(total, 2)
            p['Resultado'] = 'Seleccionado' if total >= 80 else 'No seleccionado'
    st.success("Evaluación completada")
    st.dataframe(pd.DataFrame(st.session_state.postulaciones))

elif menu == "📋 Listado de Evaluados":
    st.subheader("Listado de postulaciones evaluadas")
    st.dataframe(pd.DataFrame(st.session_state.postulaciones))

elif menu == "📊 Panel de Métricas":
    st.subheader("Resumen del proceso")
    total = len(st.session_state.postulaciones)
    seleccionados = sum(1 for p in st.session_state.postulaciones if p['Resultado'] == 'Seleccionado')
    no_seleccionados = total - seleccionados
    st.metric("Total de postulantes", total)
    st.metric("Seleccionados", seleccionados)
    st.metric("No seleccionados", no_seleccionados)
    st.dataframe(pd.DataFrame(st.session_state.postulaciones))